name: Archive release

on:
  workflow_dispatch:
  push:
    branches:
      - dev-browser
    tags:
      - 'latest'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: macos-arm64
            python-version: '3.9'
            architecture: arm64
          - os: macos-latest
            platform: macos-intel
            python-version: '3.9'
            architecture: x86_64
          - os: ubuntu-22.04
            platform: linux
            python-version: '3.9'
            architecture: x86_64
          - os: windows-latest
            platform: windows
            python-version: '3.9'
            architecture: x86_64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y upx-ucl
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (macOS/Windows)
      if: matrix.os != 'ubuntu-22.04'
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller (macOS)
      if: startsWith(matrix.platform, 'macos')
      run: |
        ARCHFLAGS="-arch ${{ matrix.architecture }}" python -m PyInstaller vai.spec
        # Verify architecture of binary
        file dist/launcher/launch

    - name: Build with PyInstaller (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        python -m PyInstaller vai.spec
        file dist/launcher/launch

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m PyInstaller vai.spec

    - name: Archive PyInstaller output
      shell: bash
      run: |
        cd dist
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../vai-dist-${{ matrix.platform }}.zip *
        else
          tar -czf ../vai-dist-${{ matrix.platform }}.tar.gz *
        fi
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vai-dist-${{ matrix.platform }}
        path: |
          vai-dist-${{ matrix.platform }}.tar.gz
          vai-dist-${{ matrix.platform }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/tags/latest'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Prepare release files
      run: |
        mkdir release-files
        find . -name "vai-dist-*.tar.gz" -o -name "vai-dist-*.zip" -exec cp {} release-files/ \;

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        tag_name: latest
        name: Latest Release
        body: |
          This is the latest multi-platform build of the application.
          Built on: ${{ github.event.head_commit.timestamp }}
          
          Available platforms:
          - macOS (Apple Silicon/ARM64)
          - macOS (Intel/x86_64)
          - Linux (x86_64)
          - Windows (x86_64)
          
          Python version: 3.9
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}