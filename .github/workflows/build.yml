name: Archive release

on:
  workflow_dispatch:
  push:
    branches:
      - dev-browser
    tags:
      - 'latest'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: macos-arm64
            architecture: arm64
          - os: macos-latest
            platform: macos-intel
            architecture: x86_64
          - os: ubuntu-latest
            platform: linux
            architecture: x86_64
          - os: windows-latest
            platform: windows
            architecture: x86_64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y upx-ucl
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (macOS/Windows)
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller (macOS)
      if: startsWith(matrix.platform, 'macos')
      run: |
        ARCHFLAGS="-arch ${{ matrix.architecture }}" python -m PyInstaller vai.spec
        # Verify architecture of binary
        lipo -info dist/launcher/launch

    - name: Build with PyInstaller (non-macOS)
      if: "!startsWith(matrix.platform, 'macos')"
      run: python -m PyInstaller vai.spec

    - name: Archive PyInstaller output
      shell: bash
      run: |
        cd dist
        tar -czf ../vai-dist-${{ matrix.platform }}.tar.gz *
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vai-dist-${{ matrix.platform }}
        path: vai-dist-${{ matrix.platform }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/tags/latest'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: List downloaded artifacts
      run: ls -R

    - name: Prepare release files
      run: |
        mkdir release-files
        cp vai-dist-*/vai-dist-*.tar.gz release-files/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        tag_name: latest
        name: Latest Release
        body: |
          This is the latest multi-platform build of the application.
          Built on: ${{ github.event.head_commit.timestamp }}
          
          Available platforms:
          - macOS (Apple Silicon/ARM64)
          - macOS (Intel/x86_64)
          - Linux (x86_64)
          - Windows (x86_64)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}